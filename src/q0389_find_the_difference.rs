//You are given two strings s and t.
//
// String t is generated by random shuffling string s and then add one more
//letter at a random position.
//
// Return the letter that was added to t.
//
//
// Example 1:
//
//
//Input: s = "abcd", t = "abcde"
//Output: "e"
//Explanation: 'e' is the letter that was added.
//
//
// Example 2:
//
//
//Input: s = "", t = "y"
//Output: "y"
//
//
//
// Constraints:
//
//
// 0 <= s.length <= 1000
// t.length == s.length + 1
// s and t consist of lowercase English letters.
//
//
// Related Topics Hash Table String Bit Manipulation Sorting 👍 5001 👎 480

pub struct Solution;
//leetcode submit region begin(Prohibit modification and deletion)
impl Solution {
    pub fn find_the_difference(s: String, t: String) -> char {
        let mut sum: u8 = 0;

        for byte in s.as_bytes() {
            sum ^= byte;
        }

        for byte in t.as_bytes() {
            sum ^= byte;
        }

        sum as char
    }
}
//leetcode submit region end(Prohibit modification and deletion)
#[cfg(test)]
mod tests {
    use crate::q0389_find_the_difference::Solution;

    #[test]
    fn test() {
        assert_eq!(
            'e',
            Solution::find_the_difference("abcd".to_string(), "abcde".to_string())
        );
        assert_eq!(
            'y',
            Solution::find_the_difference("".to_string(), "y".to_string())
        );
    }
}
